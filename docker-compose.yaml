services:
  postgres:
    container_name: postgres
    image: postgres:16.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: weather_notification
    command: postgres -c 'max_connections=5000'
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username",
          "user",
          "--dbname",
          "weather_notification",
        ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - weather_notification

  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - weather_notification

  api:
    container_name: api
    image: "fredericoleao/weather-notification:0.2"
    ports:
      - "8080:8080"
    command: -e api
    networks:
      - weather_notification
    depends_on:
      - postgres

  worker:
    depends_on:
      - rabbitmq
      - postgres
    container_name: worker
    image: "fredericoleao/weather-notification:0.2"
    command: -e worker
    networks:
      - weather_notification

  websocket:
    container_name: websocket
    image: "fredericoleao/weather-notification:0.2"
    command: -e websocket
    networks:
      - weather_notification

networks:
  weather_notification: